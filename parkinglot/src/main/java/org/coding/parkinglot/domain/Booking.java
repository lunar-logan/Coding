package org.coding.parkinglot.domain;

import org.coding.common.annotation.Nullable;

import java.util.Date;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

public class Booking {
    @Nullable
    private Integer id;
    private int slot;
    private boolean active;
    private Date created;
    @Nullable
    private Date lastUpdated;

    // region Constructor, getters, setters, equals, hashCode, toString, builder -- generated by BoB the Builder of Beans
    // The code below has been generated by BoB the Builder of Beans based on the class' fields.
    // Everything after this comment will be regenerated if you invoke BoB again.
    // If you don't know who BoB is, you can find him here: https://bitbucket.org/atlassianlabs/bob-the-builder-of-beans

    protected Booking(@Nullable Integer id, int slot, boolean active, Date created, @Nullable Date lastUpdated) {
        this.id = id;
        this.slot = slot;
        this.active = active;
        this.created = Objects.requireNonNull(created);
        this.lastUpdated = lastUpdated;
    }

    // region Getters and setters -- generated by BoB the Builder of Beans
    public Optional<Integer> getId() {
        return Optional.ofNullable(id);
    }

    public void setId(@Nullable Integer id) {
        this.id = id;
    }

    public int getSlot() {
        return slot;
    }

    public void setSlot(int slot) {
        this.slot = slot;
    }

    public boolean isActive() {
        return active;
    }

    public void setActive(boolean active) {
        this.active = active;
    }

    public Date getCreated() {
        return created;
    }

    public void setCreated(Date created) {
        this.created = Objects.requireNonNull(created);
    }

    public Optional<Date> getLastUpdated() {
        return Optional.ofNullable(lastUpdated);
    }

    public void setLastUpdated(@Nullable Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }// endregion Getters and setters

    // region hashCode() and equals() -- generated by BoB the Builder of Beans
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        Booking that = (Booking) o;

        return Objects.equals(this.getId(), that.getId()) && Objects.equals(this.getSlot(), that.getSlot()) && Objects.equals(this.isActive(), that.isActive()) && Objects.equals(this.getCreated(), that.getCreated()) && Objects.equals(this.getLastUpdated(), that.getLastUpdated());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(), getSlot(), isActive(), getCreated(), getLastUpdated());
    }// endregion hashCode() and equals()

    // region toString() -- generated by BoB the Builder of Beans
    @Override
    public String toString() {
        return new StringJoiner(", ", this.getClass().getSimpleName() + "{", "}")
                .add("id=" + getId())
                .add("slot=" + getSlot())
                .add("active=" + isActive())
                .add("created=" + getCreated())
                .add("lastUpdated=" + getLastUpdated())
                .toString();
    }// endregion toString()

    // region Builder -- generated by BoB the Builder of Beans
    public static Booking.Builder builder() {
        return new Booking.Builder();
    }

    public static Booking.Builder builder(Booking data) {
        return new Booking.Builder(data);
    }

    public static final class Builder {

        private Integer id;
        private int slot;
        private boolean active;
        private Date created;
        private Date lastUpdated;

        private Builder() {
        }

        private Builder(Booking initialData) {
            this.id = initialData.id;
            this.slot = initialData.slot;
            this.active = initialData.active;
            this.created = initialData.created;
            this.lastUpdated = initialData.lastUpdated;
        }

        public Builder setId(@Nullable Integer id) {
            this.id = id;
            return this;
        }

        public Builder setSlot(int slot) {
            this.slot = slot;
            return this;
        }

        public Builder setActive(boolean active) {
            this.active = active;
            return this;
        }

        public Builder setCreated(Date created) {
            this.created = created;
            return this;
        }

        public Builder setLastUpdated(@Nullable Date lastUpdated) {
            this.lastUpdated = lastUpdated;
            return this;
        }

        public Booking build() {
            return new Booking(id, slot, active, created, lastUpdated);
        }
    }// endregion Builder
    // endregion Constructor, getters, setters, equals, hashCode, toString, builder
}
